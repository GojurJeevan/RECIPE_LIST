{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sandeep Reddy\\\\Downloads\\\\jeevan\\\\jeevan\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Filters, { DropdownOptions } from \"./components/Filters\";\nimport RecipeList from \"./components/RecipeList\";\nimport AddRecipeModal from \"./components/AddRecipeModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [filters, setFilters] = useState({\n    type: \"\",\n    cuisine: \"\"\n  });\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const {\n    types,\n    cuisines\n  } = DropdownOptions;\n\n  // Fetch recipes from the backend\n  const fetchRecipes = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"http://localhost:3001/recipes\");\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch recipes.\");\n      }\n      const data = await response.json();\n      setRecipes(data); // Set the recipes state with fetched data\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch recipes initially and when filters or search query change\n  useEffect(() => {\n    fetchRecipes();\n  }, [filters, searchQuery]);\n\n  // Add a new recipe\n  const addRecipe = async recipe => {\n    try {\n      const response = await fetch(\"http://localhost:3001/recipes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(recipe)\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to add recipe: ${response.statusText}`);\n      }\n      const newRecipe = await response.json();\n      setRecipes(prevRecipes => [...prevRecipes, newRecipe]); // Add the new recipe to the list\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onSearch: setSearchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spaced\",\n      children: /*#__PURE__*/_jsxDEV(Filters, {\n        filters: filters,\n        setFilters: setFilters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsModalOpen(true),\n        children: \"Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddRecipeModal, {\n        isOpen: isModalOpen,\n        onClose: () => setIsModalOpen(false),\n        onAddRecipe: addRecipe,\n        types: types,\n        cuisines: cuisines\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 23\n    }, this), !loading && !error && recipes.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recipes found. Try adjusting your search or filters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this), !loading && !error && recipes.length > 0 && /*#__PURE__*/_jsxDEV(RecipeList, {\n      recipes: recipes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 58\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"bHrfVjnA54z1QpBz7OCMn3tCUmw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Filters","DropdownOptions","RecipeList","AddRecipeModal","jsxDEV","_jsxDEV","App","_s","filters","setFilters","type","cuisine","searchQuery","setSearchQuery","recipes","setRecipes","loading","setLoading","error","setError","isModalOpen","setIsModalOpen","types","cuisines","fetchRecipes","response","fetch","ok","Error","data","json","err","message","addRecipe","recipe","method","headers","body","JSON","stringify","statusText","newRecipe","prevRecipes","console","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","style","padding","onClick","isOpen","onClose","onAddRecipe","length","_c","$RefreshReg$"],"sources":["C:/Users/Sandeep Reddy/Downloads/jeevan/jeevan/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Filters, { DropdownOptions } from \"./components/Filters\";\nimport RecipeList from \"./components/RecipeList\";\nimport AddRecipeModal from \"./components/AddRecipeModal\";\n\nconst App = () => {\n    const [filters, setFilters] = useState({\n        type: \"\",\n        cuisine: \"\",\n    });\n\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [recipes, setRecipes] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const { types, cuisines } = DropdownOptions;\n\n    // Fetch recipes from the backend\n    const fetchRecipes = async () => {\n        setLoading(true);\n        setError(null);\n\n        try {\n            const response = await fetch(\"http://localhost:3001/recipes\");\n            if (!response.ok) {\n                throw new Error(\"Failed to fetch recipes.\");\n            }\n\n            const data = await response.json();\n            setRecipes(data); // Set the recipes state with fetched data\n        } catch (err) {\n            setError(err.message);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Fetch recipes initially and when filters or search query change\n    useEffect(() => {\n        fetchRecipes();\n    }, [filters, searchQuery]);\n\n    // Add a new recipe\n    const addRecipe = async (recipe) => {\n        try {\n            const response = await fetch(\"http://localhost:3001/recipes\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(recipe),\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed to add recipe: ${response.statusText}`);\n            }\n\n            const newRecipe = await response.json();\n            setRecipes((prevRecipes) => [...prevRecipes, newRecipe]); // Add the new recipe to the list\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <div>\n            <Navbar onSearch={setSearchQuery} />\n            <div className=\"spaced\">\n                <Filters filters={filters} setFilters={setFilters} />\n            </div>\n            <div style={{ padding: \"20px\" }}>\n                <button onClick={() => setIsModalOpen(true)}>Add Recipe</button>\n                <AddRecipeModal\n                    isOpen={isModalOpen}\n                    onClose={() => setIsModalOpen(false)}\n                    onAddRecipe={addRecipe}\n                    types={types}\n                    cuisines={cuisines}\n                />\n            </div>\n            {loading && <p>Loading...</p>}\n            {error && <p>{error}</p>}\n            {!loading && !error && recipes.length === 0 && (\n                <p>No recipes found. Try adjusting your search or filters.</p>\n            )}\n            {!loading && !error && recipes.length > 0 && <RecipeList recipes={recipes} />}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}